# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

# Home page
GET     /                           controllers.Application.index()
GET     /dashboard                  controllers.Dashboard.index()

GET     /dealer                     controllers.dealer.Index.index()
GET     /dealer/new                 controllers.dealer.Register.index()
POST    /dealer/new                 controllers.dealer.Register.save()
GET     /dealer/delete/:id          controllers.dealer.Index.delete(id: Long)
POST    /dealer/addUser             controllers.dealer.Index.addUser()
GET     /dealer/addProduct/:id      controllers.product.Index.add(id: Long)
POST    /dealer/addProduct/:id      controllers.dealer.Index.addProduct(id: Long)

GET     /dealer/settings            controllers.dealer.settings.Index.index(dealer : Long ?= 0)
GET     /dealer/detail/$id<[0-9]+>  controllers.dealer.Index.detail(id: Long)

GET     /product/detail/$id<[0-9]+> controllers.product.Index.detail(id: Long)

POST    /login                      controllers.Application.authenticate()
GET     /logout                     controllers.Application.logout()

GET     /settings                   controllers.account.settings.Index.index()
GET     /settings/password          controllers.account.settings.Password.index()
POST    /settings/password          controllers.account.settings.Password.runPassword()
GET     /settings/email             controllers.account.settings.Email.index()
POST    /settings/email             controllers.account.settings.Email.runEmail()

# Registers the user, sending an email to confirm the account.
GET     /signup                     controllers.account.Signup.create()
POST    /signup                     controllers.account.Signup.save()

# Accessed when the user confirms the registration.
GET     /confirm/:confirmToken      controllers.account.Signup.confirm(confirmToken:String)

# Displays a page to send a reset email given the user's email.
GET     /reset/ask                  controllers.account.Reset.ask()
POST    /reset/ask                  controllers.account.Reset.runAsk()

# Resets the password using the password.
GET     /reset/:token               controllers.account.Reset.reset(token:String)
POST    /reset/:token               controllers.account.Reset.runReset(token:String)

GET     /email/:token               controllers.account.settings.Email.validateEmail(token:String)

# Map static resources from the /public folder to the /assets URL path
GET     /assets/*file               controllers.Assets.at(path="/public", file)

